.. default-domain:: lua
.. highlight:: lua
.. currentmodule:: SpaceCenter

SpaceCenter
===========


.. module:: SpaceCenter

Provides functionality to interact with Kerbal Space Program. This includes controlling
the active vessel, managing its resources, planning maneuver nodes and auto-piloting.


.. attribute:: active_vessel

   The currently active vessel.

   :Attribute: Can be read or written
   :rtype: :class:`SpaceCenter.Vessel`




.. attribute:: vessels

   A list of all the vessels in the game.

   :Attribute: Read-only, cannot be set
   :rtype: List of :class:`SpaceCenter.Vessel`




.. attribute:: bodies

   A dictionary of all celestial bodies (planets, moons, etc.) in the game,
   keyed by the name of the body.

   :Attribute: Read-only, cannot be set
   :rtype: Map from string to :class:`SpaceCenter.CelestialBody`




.. attribute:: target_body

   The currently targeted celestial body.

   :Attribute: Can be read or written
   :rtype: :class:`SpaceCenter.CelestialBody`




.. attribute:: target_vessel

   The currently targeted vessel.

   :Attribute: Can be read or written
   :rtype: :class:`SpaceCenter.Vessel`




.. attribute:: target_docking_port

   The currently targeted docking port.

   :Attribute: Can be read or written
   :rtype: :class:`SpaceCenter.DockingPort`




.. staticmethod:: clear_target()

   Clears the current target.





.. staticmethod:: launchable_vessels(craft_directory)

   Returns a list of vessels from the given *craft_directory* that can be launched.

   :param string craft_directory: Name of the directory in the current saves "Ships" directory. For example ``"VAB"`` or ``"SPH"``.
   :rtype: List of string




.. staticmethod:: launch_vessel(craft_directory, name, launch_site)

   Launch a vessel.

   :param string craft_directory: Name of the directory in the current saves "Ships" directory, that contains the craft file. For example ``"VAB"`` or ``"SPH"``.
   :param string name: Name of the vessel to launch. This is the name of the ".craft" file in the save directory, without the ".craft" file extension.
   :param string launch_site: Name of the launch site. For example ``"LaunchPad"`` or ``"Runway"``.




.. staticmethod:: launch_vessel_from_vab(name)

   Launch a new vessel from the VAB onto the launchpad.

   :param string name: Name of the vessel to launch.

   .. note::

      This is equivalent to calling :meth:`SpaceCenter.launch_vessel` with the craft directory set to "VAB" and the launch site set to "LaunchPad".




.. staticmethod:: launch_vessel_from_sph(name)

   Launch a new vessel from the SPH onto the runway.

   :param string name: Name of the vessel to launch.

   .. note::

      This is equivalent to calling :meth:`SpaceCenter.launch_vessel` with the craft directory set to "SPH" and the launch site set to "Runway".




.. staticmethod:: save(name)

   Save the game with a given name.
   This will create a save file called ``name.sfs`` in the folder of the current save game.

   :param string name:




.. staticmethod:: load(name)

   Load the game with the given name.
   This will create a load a save file called ``name.sfs`` from the folder of the current save game.

   :param string name:




.. staticmethod:: quicksave()

   Save a quicksave.


   .. note::

      This is the same as calling :meth:`SpaceCenter.save` with the name "quicksave".




.. staticmethod:: quickload()

   Load a quicksave.


   .. note::

      This is the same as calling :meth:`SpaceCenter.load` with the name "quicksave".




.. attribute:: camera

   An object that can be used to control the camera.

   :Attribute: Read-only, cannot be set
   :rtype: :class:`SpaceCenter.Camera`




.. attribute:: ut

   The current universal time in seconds.

   :Attribute: Read-only, cannot be set
   :rtype: number




.. attribute:: g

   The value of the `gravitational constant <https://en.wikipedia.org/wiki/Gravitational_constant>`_
   G in :math:`N(m/kg)^2`.

   :Attribute: Read-only, cannot be set
   :rtype: number




.. attribute:: warp_mode

   The current time warp mode. Returns :attr:`SpaceCenter.WarpMode.none` if time
   warp is not active, :attr:`SpaceCenter.WarpMode.rails` if regular "on-rails" time warp
   is active, or :attr:`SpaceCenter.WarpMode.physics` if physical time warp is active.

   :Attribute: Read-only, cannot be set
   :rtype: :class:`SpaceCenter.WarpMode`




.. attribute:: warp_rate

   The current warp rate. This is the rate at which time is passing for
   either on-rails or physical time warp. For example, a value of 10 means
   time is passing 10x faster than normal. Returns 1 if time warp is not
   active.

   :Attribute: Read-only, cannot be set
   :rtype: number




.. attribute:: warp_factor

   The current warp factor. This is the index of the rate at which time
   is passing for either regular "on-rails" or physical time warp. Returns 0
   if time warp is not active. When in on-rails time warp, this is equal to
   :attr:`SpaceCenter.rails_warp_factor`, and in physics time warp, this is equal to
   :attr:`SpaceCenter.physics_warp_factor`.

   :Attribute: Read-only, cannot be set
   :rtype: number




.. attribute:: rails_warp_factor

   The time warp rate, using regular "on-rails" time warp. A value between
   0 and 7 inclusive. 0 means no time warp. Returns 0 if physical time warp
   is active.
   If requested time warp factor cannot be set, it will be set to the next
   lowest possible value. For example, if the vessel is too close to a
   planet. See `the KSP wiki <http://wiki.kerbalspaceprogram.com/wiki/Time_warp>`_ for details.

   :Attribute: Can be read or written
   :rtype: number




.. attribute:: physics_warp_factor

   The physical time warp rate. A value between 0 and 3 inclusive. 0 means
   no time warp. Returns 0 if regular "on-rails" time warp is active.

   :Attribute: Can be read or written
   :rtype: number




.. staticmethod:: can_rails_warp_at([factor = 1])

   Returns ``True`` if regular "on-rails" time warp can be used, at the specified warp
   *factor*. The maximum time warp rate is limited by various things,
   including how close the active vessel is to a planet. See
   `the KSP wiki <http://wiki.kerbalspaceprogram.com/wiki/Time_warp>`_ for details.

   :param number factor: The warp factor to check.
   :rtype: boolean




.. attribute:: maximum_rails_warp_factor

   The current maximum regular "on-rails" warp factor that can be set.
   A value between 0 and 7 inclusive.  See
   `the KSP wiki <http://wiki.kerbalspaceprogram.com/wiki/Time_warp>`_ for details.

   :Attribute: Read-only, cannot be set
   :rtype: number




.. staticmethod:: warp_to(ut, [max_rails_rate = 100000.0], [max_physics_rate = 2.0])

   Uses time acceleration to warp forward to a time in the future, specified
   by universal time *ut*. This call blocks until the desired
   time is reached. Uses regular "on-rails" or physical time warp as appropriate.
   For example, physical time warp is used when the active vessel is traveling
   through an atmosphere. When using regular "on-rails" time warp, the warp
   rate is limited by *max_rails_rate*, and when using physical
   time warp, the warp rate is limited by *max_physics_rate*.

   :param number ut: The universal time to warp to, in seconds.
   :param number max_rails_rate: The maximum warp rate in regular "on-rails" time warp.
   :param number max_physics_rate: The maximum warp rate in physical time warp.
   :returns: When the time warp is complete.




.. staticmethod:: transform_position(position, from, to)

   Converts a position vector from one reference frame to another.

   :param Tuple position: Position vector in reference frame *from*.
   :param SpaceCenter.ReferenceFrame from: The reference frame that the position vector is in.
   :param SpaceCenter.ReferenceFrame to: The reference frame to covert the position vector to.
   :returns: The corresponding position vector in reference frame *to*.
   :rtype: Tuple of (number, number, number)




.. staticmethod:: transform_direction(direction, from, to)

   Converts a direction vector from one reference frame to another.

   :param Tuple direction: Direction vector in reference frame *from*.
   :param SpaceCenter.ReferenceFrame from: The reference frame that the direction vector is in.
   :param SpaceCenter.ReferenceFrame to: The reference frame to covert the direction vector to.
   :returns: The corresponding direction vector in reference frame *to*.
   :rtype: Tuple of (number, number, number)




.. staticmethod:: transform_rotation(rotation, from, to)

   Converts a rotation from one reference frame to another.

   :param Tuple rotation: Rotation in reference frame *from*.
   :param SpaceCenter.ReferenceFrame from: The reference frame that the rotation is in.
   :param SpaceCenter.ReferenceFrame to: The corresponding rotation in reference frame *to*.
   :returns: The corresponding rotation in reference frame *to*.
   :rtype: Tuple of (number, number, number, number)




.. staticmethod:: transform_velocity(position, velocity, from, to)

   Converts a velocity vector (acting at the specified position vector) from one
   reference frame to another. The position vector is required to take the
   relative angular velocity of the reference frames into account.

   :param Tuple position: Position vector in reference frame *from*.
   :param Tuple velocity: Velocity vector in reference frame *from*.
   :param SpaceCenter.ReferenceFrame from: The reference frame that the position and velocity vectors are in.
   :param SpaceCenter.ReferenceFrame to: The reference frame to covert the velocity vector to.
   :returns: The corresponding velocity in reference frame *to*.
   :rtype: Tuple of (number, number, number)




.. attribute:: far_available

   Whether `Ferram Aerospace Research <http://forum.kerbalspaceprogram.com/index.php?/topic/19321-105-ferram-aerospace-research-v01557-johnson-21816/>`_ is installed.

   :Attribute: Read-only, cannot be set
   :rtype: boolean





.. class:: WarpMode

   The time warp mode.
   Returned by :class:`SpaceCenter.WarpMode`


   .. data:: rails

      Time warp is active, and in regular "on-rails" mode.


   .. data:: physics

      Time warp is active, and in physical time warp mode.


   .. data:: none

      Time warp is not active.
