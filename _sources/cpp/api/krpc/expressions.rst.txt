.. default-domain:: cpp
.. highlight:: cpp
.. namespace:: krpc::services::KRPC

Expressions
===========


.. class:: Expression

   A server side expression.

   .. function:: static Expression constant_double(Client& connection, double value)

      A constant value of type double.

      :Parameters:

   .. function:: static Expression constant_float(Client& connection, float value)

      A constant value of type float.

      :Parameters:

   .. function:: static Expression constant_int(Client& connection, int32_t value)

      A constant value of type int.

      :Parameters:

   .. function:: static Expression constant_string(Client& connection, std::string value)

      A constant value of type string.

      :Parameters:

   .. function:: static Expression call(Client& connection, krpc::schema::ProcedureCall call)

      An RPC call.

      :Parameters:

   .. function:: static Expression equal(Client& connection, Expression arg0, Expression arg1)

      Equality comparison.

      :Parameters:

   .. function:: static Expression not_equal(Client& connection, Expression arg0, Expression arg1)

      Inequality comparison.

      :Parameters:

   .. function:: static Expression greater_than(Client& connection, Expression arg0, Expression arg1)

      Greater than numerical comparison.

      :Parameters:

   .. function:: static Expression greater_than_or_equal(Client& connection, Expression arg0, Expression arg1)

      Greater than or equal numerical comparison.

      :Parameters:

   .. function:: static Expression less_than(Client& connection, Expression arg0, Expression arg1)

      Less than numerical comparison.

      :Parameters:

   .. function:: static Expression less_than_or_equal(Client& connection, Expression arg0, Expression arg1)

      Less than or equal numerical comparison.

      :Parameters:

   .. function:: static Expression and__(Client& connection, Expression arg0, Expression arg1)

      Boolean and operator.

      :Parameters:

   .. function:: static Expression or__(Client& connection, Expression arg0, Expression arg1)

      Boolean or operator.

      :Parameters:

   .. function:: static Expression exclusive_or(Client& connection, Expression arg0, Expression arg1)

      Boolean exclusive-or operator.

      :Parameters:

   .. function:: static Expression not__(Client& connection, Expression arg)

      Boolean negation operator.

      :Parameters:

   .. function:: static Expression add(Client& connection, Expression arg0, Expression arg1)

      Numerical addition.

      :Parameters:

   .. function:: static Expression subtract(Client& connection, Expression arg0, Expression arg1)

      Numerical subtraction.

      :Parameters:

   .. function:: static Expression multiply(Client& connection, Expression arg0, Expression arg1)

      Numerical multiplication.

      :Parameters:

   .. function:: static Expression divide(Client& connection, Expression arg0, Expression arg1)

      Numerical division.

      :Parameters:

   .. function:: static Expression modulo(Client& connection, Expression arg0, Expression arg1)

      Numerical modulo operator.

      :Parameters:




      :returns: The remainder of arg0 divided by arg1

   .. function:: static Expression power(Client& connection, Expression arg0, Expression arg1)

      Numerical power operator.

      :Parameters:




      :returns: arg0 raised to the power of arg1

   .. function:: static Expression left_shift(Client& connection, Expression arg0, Expression arg1)

      Bitwise left shift.

      :Parameters:

   .. function:: static Expression right_shift(Client& connection, Expression arg0, Expression arg1)

      Bitwise right shift.

      :Parameters:

   .. function:: static Expression to_double(Client& connection, Expression arg)

      Convert to a double type.

      :Parameters:

   .. function:: static Expression to_float(Client& connection, Expression arg)

      Convert to a float type.

      :Parameters:

   .. function:: static Expression to_int(Client& connection, Expression arg)

      Convert to an int type.

      :Parameters:
