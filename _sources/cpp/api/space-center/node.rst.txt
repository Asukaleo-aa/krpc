.. default-domain:: cpp
.. highlight:: cpp
.. namespace:: krpc::services::SpaceCenter

Node
====


.. class:: Node

   Represents a maneuver node. Can be created using :func:`Control::add_node`.

   .. function:: double prograde()
   .. function:: void set_prograde(double value)

      The magnitude of the maneuver nodes delta-v in the prograde direction,
      in meters per second.

   .. function:: double normal()
   .. function:: void set_normal(double value)

      The magnitude of the maneuver nodes delta-v in the normal direction,
      in meters per second.

   .. function:: double radial()
   .. function:: void set_radial(double value)

      The magnitude of the maneuver nodes delta-v in the radial direction,
      in meters per second.

   .. function:: double delta_v()
   .. function:: void set_delta_v(double value)

      The delta-v of the maneuver node, in meters per second.


      .. note::

         Does not change when executing the maneuver node. See :func:`Node::remaining_delta_v`.

   .. function:: double remaining_delta_v()

      Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the
      node is executed. This is equivalent to the delta-v reported in-game.

   .. function:: std::tuple<double, double, double> burn_vector(ReferenceFrame reference_frame = ReferenceFrame())

      Returns the burn vector for the maneuver node.

      :Parameters:

       * **reference_frame** -- The reference frame that the returned vector is in. Defaults to :func:`Vessel::orbital_reference_frame`.

      :returns: A vector whose direction is the direction of the maneuver node burn, and magnitude is the delta-v of the burn in meters per second.

      .. note::

         Does not change when executing the maneuver node. See :func:`Node::remaining_burn_vector`.

   .. function:: std::tuple<double, double, double> remaining_burn_vector(ReferenceFrame reference_frame = ReferenceFrame())

      Returns the remaining burn vector for the maneuver node.

      :Parameters:

       * **reference_frame** -- The reference frame that the returned vector is in. Defaults to :func:`Vessel::orbital_reference_frame`.

      :returns: A vector whose direction is the direction of the maneuver node burn, and magnitude is the delta-v of the burn in meters per second.

      .. note::

         Changes as the maneuver node is executed. See :func:`Node::burn_vector`.

   .. function:: double ut()
   .. function:: void set_ut(double value)

      The universal time at which the maneuver will occur, in seconds.

   .. function:: double time_to()

      The time until the maneuver node will be encountered, in seconds.

   .. function:: Orbit orbit()

      The orbit that results from executing the maneuver node.

   .. function:: void remove()

      Removes the maneuver node.

   .. function:: ReferenceFrame reference_frame()

      The reference frame that is fixed relative to the maneuver node's burn.

      * The origin is at the position of the maneuver node.
      * The y-axis points in the direction of the burn.
      * The x-axis and z-axis point in arbitrary but fixed directions.

   .. function:: ReferenceFrame orbital_reference_frame()

      The reference frame that is fixed relative to the maneuver node, and
      orientated with the orbital prograde/normal/radial directions of the
      original orbit at the maneuver node's position.

      * The origin is at the position of the maneuver node.
      * The x-axis points in the orbital anti-radial direction of the original
        orbit, at the position of the maneuver node.
      * The y-axis points in the orbital prograde direction of the original
        orbit, at the position of the maneuver node.
      * The z-axis points in the orbital normal direction of the original orbit,
        at the position of the maneuver node.

   .. function:: std::tuple<double, double, double> position(ReferenceFrame reference_frame)

      The position vector of the maneuver node in the given reference frame.

      :Parameters:

       * **reference_frame** -- The reference frame that the returned position vector is in.

      :returns: The position as a vector.

   .. function:: std::tuple<double, double, double> direction(ReferenceFrame reference_frame)

      The direction of the maneuver nodes burn.

      :Parameters:

       * **reference_frame** -- The reference frame that the returned direction is in.

      :returns: The direction as a unit vector.
