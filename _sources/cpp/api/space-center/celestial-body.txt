.. default-domain:: cpp
.. highlight:: cpp
.. namespace:: krpc::services::SpaceCenter

CelestialBody
=============


.. class:: CelestialBody

   Represents a celestial body (such as a planet or moon).
   See :func:`bodies`.

   .. function:: std::string name()

      The name of the body.

   .. function:: std::vector<CelestialBody> satellites()

      A list of celestial bodies that are in orbit around this celestial body.

   .. function:: Orbit orbit()

      The orbit of the body.

   .. function:: float mass()

      The mass of the body, in kilograms.

   .. function:: float gravitational_parameter()

      The `standard gravitational parameter <https://en.wikipedia.org/wiki/Standard_gravitational_parameter>`_ of the body in :math:`m^3s^{-2}`.

   .. function:: float surface_gravity()

      The acceleration due to gravity at sea level (mean altitude) on the body, in :math:`m/s^2`.

   .. function:: float rotational_period()

      The sidereal rotational period of the body, in seconds.

   .. function:: float rotational_speed()

      The rotational speed of the body, in radians per second.

   .. function:: float equatorial_radius()

      The equatorial radius of the body, in meters.

   .. function:: double surface_height(double latitude, double longitude)

      The height of the surface relative to mean sea level at the given position,
      in meters. When over water this is equal to 0.

      :Parameters:

       * **latitude** -- Latitude in degrees
       * **longitude** -- Longitude in degrees

   .. function:: double bedrock_height(double latitude, double longitude)

      The height of the surface relative to mean sea level at the given position,
      in meters. When over water, this is the height of the sea-bed and is therefore a
      negative value.

      :Parameters:

       * **latitude** -- Latitude in degrees
       * **longitude** -- Longitude in degrees

   .. function:: std::tuple<double, double, double> msl_position(double latitude, double longitude, ReferenceFrame reference_frame)

      The position at mean sea level at the given latitude and longitude, in the given reference frame.

      :Parameters:

       * **latitude** -- Latitude in degrees
       * **longitude** -- Longitude in degrees
       * **reference_frame** -- Reference frame for the returned position vector

   .. function:: std::tuple<double, double, double> surface_position(double latitude, double longitude, ReferenceFrame reference_frame)

      The position of the surface at the given latitude and longitude, in the given
      reference frame. When over water, this is the position of the surface of the water.

      :Parameters:

       * **latitude** -- Latitude in degrees
       * **longitude** -- Longitude in degrees
       * **reference_frame** -- Reference frame for the returned position vector

   .. function:: std::tuple<double, double, double> bedrock_position(double latitude, double longitude, ReferenceFrame reference_frame)

      The position of the surface at the given latitude and longitude, in the given
      reference frame. When over water, this is the position at the bottom of the sea-bed.

      :Parameters:

       * **latitude** -- Latitude in degrees
       * **longitude** -- Longitude in degrees
       * **reference_frame** -- Reference frame for the returned position vector

   .. function:: float sphere_of_influence()

      The radius of the sphere of influence of the body, in meters.

   .. function:: bool has_atmosphere()

      ``true`` if the body has an atmosphere.

   .. function:: float atmosphere_depth()

      The depth of the atmosphere, in meters.

   .. function:: bool has_atmospheric_oxygen()

      ``true`` if there is oxygen in the atmosphere, required for air-breathing engines.

   .. function:: std::vector<std::string> biomes()

      The biomes present on this body.

   .. function:: std::string biome_at(double latitude, double longitude)

      The biomes at the given latitude and longitude, in degrees.

      :Parameters:

   .. function:: float flying_high_altitude_threshold()

      The altitude, in meters, above which a vessel is considered to be flying "high" when doing science.

   .. function:: float space_high_altitude_threshold()

      The altitude, in meters, above which a vessel is considered to be in "high" space when doing science.

   .. function:: ReferenceFrame reference_frame()

      The reference frame that is fixed relative to the celestial body.

      * The origin is at the center of the body.
      * The axes rotate with the body.
      * The x-axis points from the center of the body
        towards the intersection of the prime meridian and equator (the
        position at 0° longitude, 0° latitude).
      * The y-axis points from the center of the body
        towards the north pole.
      * The z-axis points from the center of the body
        towards the equator at 90°E longitude.


      .. figure:: /images/reference-frames/celestial-body.png
         :align: center

         Celestial body reference frame origin and axes. The equator is shown in
         blue, and the prime meridian in red.

   .. function:: ReferenceFrame non_rotating_reference_frame()

      The reference frame that is fixed relative to this celestial body, and
      orientated in a fixed direction (it does not rotate with the body).

      * The origin is at the center of the body.
      * The axes do not rotate.
      * The x-axis points in an arbitrary direction through the
        equator.
      * The y-axis points from the center of the body towards
        the north pole.
      * The z-axis points in an arbitrary direction through the
        equator.

   .. function:: ReferenceFrame orbital_reference_frame()

      Gets the reference frame that is fixed relative to this celestial body, but
      orientated with the body's orbital prograde/normal/radial directions.

      * The origin is at the center of the body.
      * The axes rotate with the orbital prograde/normal/radial
        directions.
      * The x-axis points in the orbital anti-radial direction.
      * The y-axis points in the orbital prograde direction.
      * The z-axis points in the orbital normal direction.

   .. function:: std::tuple<double, double, double> position(ReferenceFrame reference_frame)

      Returns the position vector of the center of the body in the specified reference frame.

      :Parameters:

   .. function:: std::tuple<double, double, double> velocity(ReferenceFrame reference_frame)

      Returns the velocity vector of the body in the specified reference frame.

      :Parameters:

   .. function:: std::tuple<double, double, double, double> rotation(ReferenceFrame reference_frame)

      Returns the rotation of the body in the specified reference frame.

      :Parameters:

   .. function:: std::tuple<double, double, double> direction(ReferenceFrame reference_frame)

      Returns the direction in which the north pole of the celestial body is
      pointing, as a unit vector, in the specified reference frame.

      :Parameters:

   .. function:: std::tuple<double, double, double> angular_velocity(ReferenceFrame reference_frame)

      Returns the angular velocity of the body in the specified reference
      frame. The magnitude of the vector is the rotational speed of the body, in
      radians per second, and the direction of the vector indicates the axis of
      rotation, using the right-hand rule.

      :Parameters:
