.. default-domain:: java
.. highlight:: java
.. package:: krpc.client.services.SpaceCenter

Node
====


.. type:: public class Node

   Represents a maneuver node. Can be created using :meth:`Control.addNode(double, float, float, float)`.

   .. method:: double getPrograde()

   .. method:: void setPrograde(double value)

      The magnitude of the maneuver nodes delta-v in the prograde direction,
      in meters per second.

   .. method:: double getNormal()

   .. method:: void setNormal(double value)

      The magnitude of the maneuver nodes delta-v in the normal direction,
      in meters per second.

   .. method:: double getRadial()

   .. method:: void setRadial(double value)

      The magnitude of the maneuver nodes delta-v in the radial direction,
      in meters per second.

   .. method:: double getDeltaV()

   .. method:: void setDeltaV(double value)

      The delta-v of the maneuver node, in meters per second.


      .. note::

         Does not change when executing the maneuver node. See :meth:`Node.getRemainingDeltaV()`.

   .. method:: double getRemainingDeltaV()


      Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the
      node is executed. This is equivalent to the delta-v reported in-game.

   .. method:: org.javatuples.Triplet<Double,Double,Double> burnVector(ReferenceFrame referenceFrame)

      Returns the burn vector for the maneuver node.

      :param ReferenceFrame referenceFrame: The reference frame that the returned vector is in. Defaults to :meth:`Vessel.getOrbitalReferenceFrame()`.
      :returns: A vector whose direction is the direction of the maneuver node burn, and magnitude is the delta-v of the burn in meters per second.

      .. note::

         Does not change when executing the maneuver node. See :meth:`Node.remainingBurnVector(ReferenceFrame)`.

   .. method:: org.javatuples.Triplet<Double,Double,Double> remainingBurnVector(ReferenceFrame referenceFrame)

      Returns the remaining burn vector for the maneuver node.

      :param ReferenceFrame referenceFrame: The reference frame that the returned vector is in. Defaults to :meth:`Vessel.getOrbitalReferenceFrame()`.
      :returns: A vector whose direction is the direction of the maneuver node burn, and magnitude is the delta-v of the burn in meters per second.

      .. note::

         Changes as the maneuver node is executed. See :meth:`Node.burnVector(ReferenceFrame)`.

   .. method:: double getUT()

   .. method:: void setUT(double value)

      The universal time at which the maneuver will occur, in seconds.

   .. method:: double getTimeTo()


      The time until the maneuver node will be encountered, in seconds.

   .. method:: Orbit getOrbit()


      The orbit that results from executing the maneuver node.

   .. method:: void remove()

      Removes the maneuver node.

   .. method:: ReferenceFrame getReferenceFrame()


      The reference frame that is fixed relative to the maneuver node's burn.

      * The origin is at the position of the maneuver node.
      * The y-axis points in the direction of the burn.
      * The x-axis and z-axis point in arbitrary but fixed directions.

   .. method:: ReferenceFrame getOrbitalReferenceFrame()


      The reference frame that is fixed relative to the maneuver node, and
      orientated with the orbital prograde/normal/radial directions of the
      original orbit at the maneuver node's position.

      * The origin is at the position of the maneuver node.
      * The x-axis points in the orbital anti-radial direction of the original
        orbit, at the position of the maneuver node.
      * The y-axis points in the orbital prograde direction of the original
        orbit, at the position of the maneuver node.
      * The z-axis points in the orbital normal direction of the original orbit,
        at the position of the maneuver node.

   .. method:: org.javatuples.Triplet<Double,Double,Double> position(ReferenceFrame referenceFrame)

      The position vector of the maneuver node in the given reference frame.

      :param ReferenceFrame referenceFrame: The reference frame that the returned position vector is in.
      :returns: The position as a vector.

   .. method:: org.javatuples.Triplet<Double,Double,Double> direction(ReferenceFrame referenceFrame)

      The direction of the maneuver nodes burn.

      :param ReferenceFrame referenceFrame: The reference frame that the returned direction is in.
      :returns: The direction as a unit vector.
