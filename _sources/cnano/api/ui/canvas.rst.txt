.. default-domain:: c
.. highlight:: c


Canvas
======


.. type:: krpc_UI_Canvas_t

   A canvas for user interface elements. See :func:`krpc_UI_StockCanvas` and :func:`krpc_UI_AddCanvas`.

   .. function:: krpc_error_t krpc_UI_Canvas_RectTransform(krpc_connection_t connection, krpc_UI_RectTransform_t * result)

      The rect transform for the canvas.

   .. function:: krpc_error_t krpc_UI_Canvas_Visible(krpc_connection_t connection, bool * result)
   .. function:: void krpc_UI_Canvas_set_Visible(bool value)

      Whether the UI object is visible.

   .. function:: krpc_error_t krpc_UI_Canvas_AddPanel(krpc_connection_t connection, krpc_UI_Panel_t * result, bool visible)

      Create a new container for user interface elements.

      :Parameters:

       * **visible** -- Whether the panel is visible.

   .. function:: krpc_error_t krpc_UI_Canvas_AddText(krpc_connection_t connection, krpc_UI_Text_t * result, const char * content, bool visible)

      Add text to the canvas.

      :Parameters:

       * **content** -- The text.
       * **visible** -- Whether the text is visible.

   .. function:: krpc_error_t krpc_UI_Canvas_AddInputField(krpc_connection_t connection, krpc_UI_InputField_t * result, bool visible)

      Add an input field to the canvas.

      :Parameters:

       * **visible** -- Whether the input field is visible.

   .. function:: krpc_error_t krpc_UI_Canvas_AddButton(krpc_connection_t connection, krpc_UI_Button_t * result, const char * content, bool visible)

      Add a button to the canvas.

      :Parameters:

       * **content** -- The label for the button.
       * **visible** -- Whether the button is visible.

   .. function:: krpc_error_t krpc_UI_Canvas_Remove(krpc_connection_t connection)

      Remove the UI object.
