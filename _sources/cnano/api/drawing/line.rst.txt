.. default-domain:: c
.. highlight:: c


Line
====


.. type:: krpc_Drawing_Line_t

   A line. Created using :func:`krpc_Drawing_AddLine`.

   .. function:: krpc_error_t krpc_Drawing_Line_Start(krpc_connection_t connection, krpc_tuple_double_double_double_t * result)
   .. function:: void krpc_Drawing_Line_set_Start(const krpc_tuple_double_double_double_t * value)

      Start position of the line.

   .. function:: krpc_error_t krpc_Drawing_Line_End(krpc_connection_t connection, krpc_tuple_double_double_double_t * result)
   .. function:: void krpc_Drawing_Line_set_End(const krpc_tuple_double_double_double_t * value)

      End position of the line.

   .. function:: krpc_error_t krpc_Drawing_Line_ReferenceFrame(krpc_connection_t connection, krpc_SpaceCenter_ReferenceFrame_t * result)
   .. function:: void krpc_Drawing_Line_set_ReferenceFrame(krpc_SpaceCenter_ReferenceFrame_t value)

      Reference frame for the positions of the object.

   .. function:: krpc_error_t krpc_Drawing_Line_Visible(krpc_connection_t connection, bool * result)
   .. function:: void krpc_Drawing_Line_set_Visible(bool value)

      Whether the object is visible.

   .. function:: krpc_error_t krpc_Drawing_Line_Color(krpc_connection_t connection, krpc_tuple_double_double_double_t * result)
   .. function:: void krpc_Drawing_Line_set_Color(const krpc_tuple_double_double_double_t * value)

      Set the color

   .. function:: krpc_error_t krpc_Drawing_Line_Material(krpc_connection_t connection, char * * result)
   .. function:: void krpc_Drawing_Line_set_Material(const char * value)

      Material used to render the object.
      Creates the material from a shader with the given name.

   .. function:: krpc_error_t krpc_Drawing_Line_Thickness(krpc_connection_t connection, float * result)
   .. function:: void krpc_Drawing_Line_set_Thickness(float value)

      Set the thickness

   .. function:: krpc_error_t krpc_Drawing_Line_Remove(krpc_connection_t connection)

      Remove the object.
