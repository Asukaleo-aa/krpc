.. default-domain:: c
.. highlight:: c


Polygon
=======


.. type:: krpc_Drawing_Polygon_t

   A polygon. Created using :func:`krpc_Drawing_AddPolygon`.

   .. function:: krpc_error_t krpc_Drawing_Polygon_Vertices(krpc_connection_t connection, krpc_list_tuple_double_double_double_t * result)
   .. function:: void krpc_Drawing_Polygon_set_Vertices(const krpc_list_tuple_double_double_double_t * value)

      Vertices for the polygon.

      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_ReferenceFrame(krpc_connection_t connection, krpc_SpaceCenter_ReferenceFrame_t * result)
   .. function:: void krpc_Drawing_Polygon_set_ReferenceFrame(krpc_SpaceCenter_ReferenceFrame_t value)

      Reference frame for the positions of the object.

      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_Visible(krpc_connection_t connection, bool * result)
   .. function:: void krpc_Drawing_Polygon_set_Visible(bool value)

      Whether the object is visible.

      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_Remove(krpc_connection_t connection)

      Remove the object.


      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_Color(krpc_connection_t connection, krpc_tuple_double_double_double_t * result)
   .. function:: void krpc_Drawing_Polygon_set_Color(const krpc_tuple_double_double_double_t * value)

      Set the color

      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_Material(krpc_connection_t connection, char * * result)
   .. function:: void krpc_Drawing_Polygon_set_Material(const char * value)

      Material used to render the object.
      Creates the material from a shader with the given name.

      :Game Scenes: Flight

   .. function:: krpc_error_t krpc_Drawing_Polygon_Thickness(krpc_connection_t connection, float * result)
   .. function:: void krpc_Drawing_Polygon_set_Thickness(float value)

      Set the thickness

      :Game Scenes: Flight
