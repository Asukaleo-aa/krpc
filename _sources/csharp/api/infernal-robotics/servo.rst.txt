.. default-domain:: csharp
.. highlight:: csharp
.. namespace:: KRPC.Client.Services.InfernalRobotics

Servo
=====


.. class:: Servo

   Represents a servo. Obtained using
   :prop:`ServoGroup.Servos`,
   :meth:`ServoGroup.ServoWithName`
   or :meth:`InfernalRobotics.ServoWithName`.

   .. property:: string Name { get; set; }

      The name of the servo.

      :Game Scenes: Flight

   .. property:: SpaceCenter.Part Part { get; }

      The part containing the servo.

      :Game Scenes: Flight

   .. property:: bool Highlight { set; }

      Whether the servo should be highlighted in-game.

      :Game Scenes: Flight

   .. property:: float Position { get; }

      The position of the servo.

      :Game Scenes: Flight

   .. property:: float MinConfigPosition { get; }

      The minimum position of the servo, specified by the part configuration.

      :Game Scenes: Flight

   .. property:: float MaxConfigPosition { get; }

      The maximum position of the servo, specified by the part configuration.

      :Game Scenes: Flight

   .. property:: float MinPosition { get; set; }

      The minimum position of the servo, specified by the in-game tweak menu.

      :Game Scenes: Flight

   .. property:: float MaxPosition { get; set; }

      The maximum position of the servo, specified by the in-game tweak menu.

      :Game Scenes: Flight

   .. property:: float ConfigSpeed { get; }

      The speed multiplier of the servo, specified by the part configuration.

      :Game Scenes: Flight

   .. property:: float Speed { get; set; }

      The speed multiplier of the servo, specified by the in-game tweak menu.

      :Game Scenes: Flight

   .. property:: float CurrentSpeed { get; set; }

      The current speed at which the servo is moving.

      :Game Scenes: Flight

   .. property:: float Acceleration { get; set; }

      The current speed multiplier set in the UI.

      :Game Scenes: Flight

   .. property:: bool IsMoving { get; }

      Whether the servo is moving.

      :Game Scenes: Flight

   .. property:: bool IsFreeMoving { get; }

      Whether the servo is freely moving.

      :Game Scenes: Flight

   .. property:: bool IsLocked { get; set; }

      Whether the servo is locked.

      :Game Scenes: Flight

   .. property:: bool IsAxisInverted { get; set; }

      Whether the servos axis is inverted.

      :Game Scenes: Flight

   .. method:: void MoveRight()

      Moves the servo to the right.


      :Game Scenes: Flight

   .. method:: void MoveLeft()

      Moves the servo to the left.


      :Game Scenes: Flight

   .. method:: void MoveCenter()

      Moves the servo to the center.


      :Game Scenes: Flight

   .. method:: void MoveNextPreset()

      Moves the servo to the next preset.


      :Game Scenes: Flight

   .. method:: void MovePrevPreset()

      Moves the servo to the previous preset.


      :Game Scenes: Flight

   .. method:: void MoveTo(float position, float speed)

      Moves the servo to *position* and sets the
      speed multiplier to *speed*.

      :parameters:

       * **position** -- The position to move the servo to.
       * **speed** -- Speed multiplier for the movement.

      :Game Scenes: Flight

   .. method:: void Stop()

      Stops the servo.


      :Game Scenes: Flight
